import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useState } from 'react';
import AddTaskForm from "./components/AddTaskForm/AddTaskForm";
import TaskCard from "./components/TaskCard/TaskCard";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [tasks, setTasks] = useState([]);

  const addTask = (newTask) => {
    setTasks([...tasks, { ...newTask, id: Date.now() }]);
  };

  const editTask = (taskId, newTask, newDescription) => {
    const updatedTasks = tasks.map((task) =>
      task.id === taskId ? { ...task, task: newTask, description: newDescription } : task
    );
    setTasks(updatedTasks);
  };

  const deleteTask = (taskId) => {
    const updatedTasks = tasks.filter((task) => task.id !== taskId);
    setTasks(updatedTasks);
  };

  const completeTask = (taskId) => {
    setTasks((prevTasks) =>
      prevTasks.map((task) =>
        task.id === taskId ? { ...task, status: task.status === 'Terminado' ? 'Sin terminar' : 'Terminado' } : task
      )
    );
  };

  const TerminadoTasks = tasks.filter((task) => task.status === 'Terminado');
  const remainingTasks = tasks.filter((task) => task.status !== 'Terminado');

  const columnStyle = {
    flex: '0 0 400px',
    margin: '0 10px',
  };

  const containerStyle = {
    display: 'flex',
    justifyContent: 'space-around',
  };


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div style={containerStyle}>
          <div style={columnStyle}>
            <h2>Agregar Tareas</h2>
            <AddTaskForm addTask={addTask} />
          </div>
          <div style={columnStyle}>
            <h2>Tareas Pendientes</h2>
            {remainingTasks.map((task) => (
              <TaskCard
                key={task.id}
                task={task}
                editTask={editTask}
                deleteTask={deleteTask}
                completeTask={completeTask}
              />
            ))}
          </div>
          <div style={columnStyle}>
            <h2>Tareas Completadas</h2>
            {TerminadoTasks.map((task) => (
              <TaskCard
                key={task.id}
                task={task}
                editTask={editTask}
                deleteTask={deleteTask}
                completeTask={completeTask}
              />
            ))}
          </div>
        </div>
      </main>
    </>
  );

}
